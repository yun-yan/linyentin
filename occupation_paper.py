#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Mon Nov 15 15:35:09 2021

@author: yentinglin
"""

import numpy as np
import sys 
sys.path.append('..')
from tool.tool_current_noninteracting import current_integrad
from scipy.integrate import quad
import matplotlib.pyplot as plt
from tool.tool_general import loglogder
import matplotlib.font_manager as font_manager
from matplotlib.pyplot import rc

e_list=[-0.8  , -0.784, -0.768, -0.752, -0.736, -0.72 , -0.704, -0.688,
       -0.672, -0.656, -0.64 , -0.624, -0.608, -0.592, -0.576, -0.56 ,
       -0.544, -0.528, -0.512, -0.496, -0.48 , -0.464, -0.448, -0.432,
       -0.416, -0.4  , -0.384, -0.368, -0.352, -0.336, -0.32 , -0.304,
       -0.288, -0.272, -0.256, -0.24 , -0.224, -0.208, -0.192, -0.176,
       -0.16 , -0.144, -0.128, -0.112, -0.096, -0.08 , -0.064, -0.048,
       -0.032, -0.016,  0.   ,  0.016,  0.032,  0.048,  0.064,  0.08 ,
        0.096,  0.112,  0.128,  0.144,  0.16 ,  0.176,  0.192,  0.208,
        0.224,  0.24 ,  0.256,  0.272,  0.288,  0.304,  0.32 ,  0.336,
        0.352,  0.368,  0.384,  0.4  ,  0.416,  0.432,  0.448,  0.464,
        0.48 ,  0.496,  0.512,  0.528,  0.544,  0.56 ,  0.576,  0.592,
        0.608,  0.624,  0.64 ,  0.656,  0.672,  0.688,  0.704,  0.72 ,
        0.736,  0.752,  0.768,  0.784]


n_array1=[0.99199496, 0.99168479, 0.99135579, 0.99100643, 0.990635  ,
       0.9902396 , 0.98981814, 0.98936829, 0.98888746, 0.98837277,
       0.98782098, 0.98722848, 0.9865912 , 0.98590456, 0.98516339,
       0.98436184, 0.98349326, 0.98255009, 0.98152368, 0.98040412,
       0.97918001, 0.97783821, 0.9763635 , 0.97473818, 0.97294161,
       0.9709496 , 0.96873372, 0.96626036, 0.96348969, 0.96037421,
       0.95685715, 0.95287026, 0.94833118, 0.94314018, 0.93717605,
       0.93029104, 0.92230477, 0.91299695, 0.90209902, 0.88928523,
       0.8741642 , 0.85627335, 0.83508035, 0.80999867, 0.78042734,
       0.74582691, 0.70584071, 0.66045663, 0.61017604, 0.55612153,
       0.5       , 0.44387847, 0.38982396, 0.33954337, 0.29415929,
       0.25417309, 0.21957266, 0.19000133, 0.16491965, 0.14372665,
       0.1258358 , 0.11071477, 0.09790098, 0.08700305, 0.07769523,
       0.06970896, 0.06282395, 0.05685982, 0.05166882, 0.04712974,
       0.04314285, 0.03962579, 0.03651031, 0.03373964, 0.03126628,
       0.0290504 , 0.02705839, 0.02526182, 0.0236365 , 0.02216179,
       0.02081999, 0.01959588, 0.01847632, 0.01744991, 0.01650674,
       0.01563816, 0.01483661, 0.01409544, 0.0134088 , 0.01277152,
       0.01217902, 0.01162723, 0.01111254, 0.01063171, 0.01018186,
       0.0097604 , 0.009365  , 0.00899357, 0.00864421, 0.00831521]
n_array2=[0.99195742, 0.99164577, 0.99131521, 0.99096419, 0.99059099,
       0.99019371, 0.98977026, 0.98931829, 0.98883519, 0.98831808,
       0.9877637 , 0.98716842, 0.98652816, 0.98583832, 0.98509372,
       0.98428846, 0.98341589, 0.98246839, 0.9814373 , 0.98031266,
       0.97908304, 0.97773525, 0.97625399, 0.97462153, 0.97281714,
       0.97081656, 0.96859127, 0.96610757, 0.96332549, 0.96019746,
       0.95666652, 0.9526643 , 0.9481083 , 0.94289862, 0.93691392,
       0.93000633, 0.92199543, 0.91266099, 0.90173468, 0.8888913 ,
       0.87374045, 0.85582118, 0.83460369, 0.80950516, 0.77992959,
       0.74534363, 0.70539703, 0.66008277, 0.6099036 , 0.55597746,
       0.5       , 0.44402254, 0.3900964 , 0.33991723, 0.29460297,
       0.25465637, 0.22007041, 0.19049484, 0.16539631, 0.14417882,
       0.12625955, 0.1111087 , 0.09826532, 0.08733901, 0.07800457,
       0.06999367, 0.06308608, 0.05710138, 0.0518917 , 0.0473357 ,
       0.04333348, 0.03980254, 0.03667451, 0.03389243, 0.03140873,
       0.02918344, 0.02718286, 0.02537847, 0.02374601, 0.02226475,
       0.02091696, 0.01968734, 0.0185627 , 0.01753161, 0.01658411,
       0.01571154, 0.01490628, 0.01416168, 0.01347184, 0.01283158,
       0.0122363 , 0.01168192, 0.01116481, 0.01068171, 0.01022974,
       0.00980629, 0.00940901, 0.00903581, 0.00868479, 0.00835423]

n_array3=[0.9919103 , 0.99159679, 0.99126427, 0.99091117, 0.99053576,
       0.99013613, 0.98971017, 0.98925553, 0.9887696 , 0.98824944,
       0.98769181, 0.98709305, 0.98644906, 0.98575521, 0.98500629,
       0.98419638, 0.98331879, 0.98236588, 0.98132892, 0.98019792,
       0.97896139, 0.97760607, 0.97611661, 0.97447519, 0.972661  ,
       0.97064969, 0.96841261, 0.96591595, 0.9631196 , 0.95997582,
       0.95642752, 0.95240612, 0.94782894, 0.9425959 , 0.93658548,
       0.92964969, 0.92160803, 0.91224036, 0.90127868, 0.88839845,
       0.87321051, 0.85525595, 0.83400818, 0.80888895, 0.77930849,
       0.74474098, 0.70484414, 0.65961718, 0.60956447, 0.55579818,
       0.5       , 0.44420182, 0.39043553, 0.34038282, 0.29515586,
       0.25525902, 0.22069151, 0.19111105, 0.16599182, 0.14474405,
       0.12678949, 0.11160155, 0.09872132, 0.08775964, 0.07839197,
       0.07035031, 0.06341452, 0.0574041 , 0.05217106, 0.04759388,
       0.04357248, 0.04002418, 0.0368804 , 0.03408405, 0.03158739,
       0.02935031, 0.02733899, 0.02552481, 0.02388339, 0.02239393,
       0.02103861, 0.01980208, 0.01867108, 0.01763412, 0.01668121,
       0.01580362, 0.01499371, 0.01424479, 0.01355094, 0.01290695,
       0.01230819, 0.01175056, 0.0112304 , 0.01074447, 0.01028983,
       0.00986387, 0.00946424, 0.00908883, 0.00873573, 0.00840321]
    
n_list1=[0.9923214124254327,
 0.9920123319942605,
 0.9916843698885187,
 0.9913359721186953,
 0.9909654195538278,
 0.9905708141012005,
 0.9901500479099584,
 0.9897007831752691,
 0.9892204155347362,
 0.9887060441416169,
 0.9881544220366868,
 0.9875619100945029,
 0.9869244243929837,
 0.9862373638371148,
 0.9854955308404243,
 0.9846930453576851,
 0.9838232316561974,
 0.9828784782445953,
 0.9818500993335644,
 0.9807281344906997,
 0.979501139040496,
 0.9781559054484293,
 0.9766771399581925,
 0.9750470699561473,
 0.9732449516849528,
 0.9712465056729411,
 0.9690231710750571,
 0.9665412052646802,
 0.963760632626897,
 0.9606337783233493,
 0.9571036409451089,
 0.9531017692442787,
 0.948545610096581,
 0.9433351026929788,
 0.9373487755303427,
 0.9304386071601956,
 0.9224239483654432,
 0.9130842853071436,
 0.9021509400459325,
 0.8892985344850094,
 0.8741358170420102,
 0.8562017474148803,
 0.8349654607552649,
 0.8098431342376922,
 0.7802388342830188,
 0.7456173292893623,
 0.7056285282983628,
 0.6602650560077045,
 0.6100290360452757,
 0.556045038352402,
 0.5,
 0.4439549616475978,
 0.3899709639547238,
 0.33973494399229753,
 0.2943714717015504,
 0.2543826707106509,
 0.21976116571694565,
 0.1901568657625376,
 0.16503453924468445,
 0.1437982525848519,
 0.12586418295800414,
 0.11070146551495925,
 0.09784905995404916,
 0.086915714692905,
 0.07757605163455572,
 0.06956139283974791,
 0.06265122446966015,
 0.05666489730702104,
 0.051454389903416144,
 0.0468982307557164,
 0.042896359054917794,
 0.03936622167665704,
 0.036239367373091365,
 0.03345879473531983,
 0.030976828924952852,
 0.028753494327060092,
 0.02675504831504289,
 0.02495293004385313,
 0.023322860041805695,
 0.021844094551571717,
 0.020498860959504265,
 0.01927186550930031,
 0.018149900666433343,
 0.017121521755410714,
 0.01617676834380253,
 0.015306954642309956,
 0.014504469159586397,
 0.013762636162884197,
 0.013075575607016374,
 0.012438089905497182,
 0.011845577963313399,
 0.011293955858383954,
 0.010779584465266041,
 0.010299216824730706,
 0.009849952090041926,
 0.009429185898799554,
 0.009034580446172231,
 0.00866402788130472,
 0.008315630111481221,
 0.007987668005739187]

n_list2=[0.9922865644969157,
 0.991976049062226,
 0.9916465670292397,
 0.991296553849237,
 0.9909242854530851,
 0.9905278549737725,
 0.990105144551704,
 0.989653806491168,
 0.9891712265078818,
 0.9886544886455635,
 0.988100333181929,
 0.9875051074256077,
 0.9868647085670853,
 0.986174516265849,
 0.9854293137655166,
 0.9846231947627122,
 0.9837494581795901,
 0.9828004579201169,
 0.9817674883905904,
 0.980640536203607,
 0.9794081232091087,
 0.9780569831986863,
 0.9765717762303576,
 0.9749346809556977,
 0.9731248632455761,
 0.9711179648711714,
 0.9688853512133873,
 0.9663931895156485,
 0.9636013537632541,
 0.960462148190135,
 0.9569183246076008,
 0.9529013220909381,
 0.9483284139008411,
 0.9430994467805193,
 0.937092996526828,
 0.9301606409349873,
 0.922122378958375,
 0.5411983745007578,
 0.9017941932078455,
 0.8889115984812364,
 0.8737199535426317,
 0.855758067052901,
 0.8344977241691444,
 0.8093585019018585,
 0.779749280127847,
 0.7451423431354529,
 0.705192996261792,
 0.6598978084126806,
 0.6097609021936767,
 0.5558983361296728,
 0.5,
 0.4441016638703697,
 0.39023909780678084,
 0.3401021915870606,
 0.2948070037382056,
 0.2548576568643993,
 0.2202507198716883,
 0.19064149809824643,
 0.16550227583061136,
 0.14424193294715532,
 0.1262800464305478,
 0.11108840151875908,
 0.09820580679216041,
 0.45880162549924314,
 0.0778776210416498,
 0.0698393590649357,
 0.06290700347317067,
 0.056900553219437565,
 0.051671586099177144,
 0.04709867790906078,
 0.04308167539238976,
 0.039537851809875145,
 0.036398646236745186,
 0.033606810484356056,
 0.031114648786599804,
 0.028882035128814227,
 0.026875136754427265,
 0.025065319044272505,
 0.023428223769675818,
 0.02194301680131418,
 0.020591876790855432,
 0.019359463796391807,
 0.018232511609409013,
 0.017199542080367558,
 0.016250541820411614,
 0.015376805237287973,
 0.01457068623447725,
 0.013825483734152568,
 0.013135291432914744,
 0.01249489257439342,
 0.011899666818065084,
 0.011345511354437721,
 0.010828773492117671,
 0.010346193508841419,
 0.009894855448290453,
 0.009472145026218468,
 0.009075714546915728,
 0.008703446150766595,
 0.008353432970746689,
 0.008023950937780537]

n_list3=[0.9922428369736648,
 0.9919305219287998,
 0.9915991314796869,
 0.9912470924120453,
 0.9908726721443566,
 0.9904739520873919,
 0.9900488023601417,
 0.9895948638423697,
 0.9891095079638976,
 0.988589797376603,
 0.9880324704583063,
 0.9874338375178396,
 0.9867897860472954,
 0.9860956726527762,
 0.9853462402639747,
 0.9845355580561559,
 0.9836569010010255,
 0.9827025983041843,
 0.9816638855894182,
 0.9805306993806998,
 0.5934441469608056,
 0.977932820399349,
 0.9764395927699422,
 0.9747936847139446,
 0.9729742237008308,
 0.9709567575758621,
 0.9687124928747338,
 0.9662075520230307,
 0.9634016713828317,
 0.9602468913724653,
 0.9566858954492661,
 0.952649987664979,
 0.9480561771374063,
 0.9428041924265211,
 0.9367721184963861,
 0.9298118101758505,
 0.9217424767727925,
 0.9123437943991568,
 0.9013475699579175,
 0.8884295588091148,
 0.8732009616231385,
 0.8552039972682776,
 0.8339136271362226,
 0.8087548107702464,
 0.7791410891849865,
 0.7445520672273511,
 0.7046511208169678,
 0.6594413768200124,
 0.6094295526145013,
 0.5557250032008991,
 0.5,
 0.44427499679909344,
 0.3905704473852589,
 0.3405586231798469,
 0.29534887913592345,
 0.2554479327726301,
 0.22085891081520612,
 0.19124518922968836,
 0.16608637286408467,
 0.14479600273149723,
 0.12679903837686143,
 0.11157044119087298,
 0.09865243004257199,
 0.08765620560081354,
 0.07825752322717039,
 0.07018818983583651,
 0.06322788150587454,
 0.05719580757245737,
 0.051943822862624264,
 0.04735001233769896,
 0.0433141045507247,
 0.039753108627623275,
 0.03659832861709041,
 0.033792447976811996,
 0.031287507125255805,
 0.029043242424129284,
 0.027025776296205267,
 0.025206315286026945,
 0.02356040723005778,
 0.02206717960074133,
 0.4065558530392047,
 0.019469300619298333,
 0.018336114410580424,
 0.017297401695815798,
 0.016343098998978692,
 0.015464441943855548,
 0.014653759736024466,
 0.013904327347222111,
 0.013210213952703562,
 0.012566162482158406,
 0.011967529541697313,
 0.011410202623400333,
 0.01089049203610234,
 0.01040513615762906,
 0.009951197639861568,
 0.009526047912606849,
 0.009127327855644643,
 0.008752907587954523,
 0.008400868520312996,
 0.008069478071199895]

#%%

n_array1 = np.array(n_array1)
n_array2 = np.array(n_array2)
n_array3 = np.array(n_array3)


n_list1 = np.array(n_list1)
n_list1 = np.array(n_list1)
n_list1 = np.array(n_list1)



fig,ax=plt.subplots()
plt.xticks(fontsize=13.5)
plt.yticks(fontsize=13.5)
#plt.xlim([-0.02,0.5])
#plt.ylim([-1.6,0.08])
my_y_ticks = [0.0,0.25,0.5,0.75,1.0]
plt.yticks(my_y_ticks)
my_x_ticks = [-0.8,-0.4,0.0,0.4,0.8]
plt.xticks(my_x_ticks)
plt.plot(e_list[1:-1:2],n_array1[1:-1:2],'D' ,color='tab:red',markersize='9',label=r"$U/\Gamma=10$",zorder=-4)#
plt.plot(e_list[1:-1:2],n_array2[1:-1:2],'o' ,color='tab:blue',markersize='8',label=r"$U/\Gamma=50$",zorder=-4)#
plt.plot(e_list[1:-1:2],n_array3[1:-1:2],'^' ,color='tab:cyan',markersize='6',label=r"$U/\Gamma=100$",zorder=-4)#
#plt.plot(u_list,exponent_TITI_list,'*' ,color='tab:blue',label=r"$L: \mbox{TI}, R:\mbox{TI}$",zorder=-3)#

plt.plot(e_list[1:-1:2],n_list3[1:-1:2],'--' ,color='k',label=r"eff. two states",zorder=-4)#

plt.legend(loc='best',fontsize=12.5)
# plt.legend(loc='best',fontsize=12.5,prop=font)
#plt.legend(loc='best',fontsize=12.5,prop=csfont)
plt.xlabel(r'$\epsilon/\Delta$',fontsize=22)
plt.ylabel(r'$n$',fontsize=22)
#plt.xlabel(r'$U/W$',fontsize=18,**csfont)
#plt.ylabel(r'$\alpha$',fontsize=18,**csfont)
plt.tight_layout()
#plt.savefig('plot/exponent_tau_two_insulator_rev.png',format='png',dpi=300)

#plt.title('title',**csfont)
ax2 = fig.add_axes([0.27, 0.27, 0.28, 0.3])
#plt.ylim([4000,4500])
plt.ylim([-1.8,1.8])
#plt.xlim([3,10])
#plt.xticks([4,7,10])
plt.xticks(fontsize=13)
plt.yticks(fontsize=13)

plt.text(-0.9, 2.0, '$10^{-3}$',fontsize=11.5)

fig,ax2=plt.subplots()
plt.xticks(fontsize=13.5)
plt.yticks(fontsize=13.5)
#plt.xlim([-0.02,0.5])
#plt.ylim([-1.6,0.08])
#my_y_ticks = [0.0,0.25,0.5,0.75,1.0]
#plt.yticks(my_y_ticks)
#my_x_ticks = [-0.8,-0.4,0.0,0.4,0.8]
#plt.xticks(my_x_ticks)
plt.plot(e_list[1:-1:2],(n_array1[1:-1:2]-n_list1[1:-1:2])*1000.0,'D' ,color='tab:red',markersize='9',label=r"$U/\Gamma=10$",zorder=-4)#
plt.plot(e_list[2:-1:2],(n_array2[2:-1:2]-n_list2[2:-1:2])*1000.0,'o' ,color='tab:blue',markersize='8',label=r"$U/\Gamma=50$",zorder=-4)#
plt.plot(e_list[1:-1:2],(n_array3[1:-1:2]-n_list3[1:-1:2])*1000.0,'^' ,color='tab:cyan',markersize='6',label=r"$U/\Gamma=100$",zorder=-4)#
#plt.plot(u_list,exponent_TITI_list,'*' ,color='tab:blue',label=r"$L: \mbox{TI}, R:\mbox{TI}$",zorder=-3)#
#plt.legend(loc='best',fontsize=12.5)
# plt.legend(loc='best',fontsize=12.5,prop=font)
#plt.legend(loc='best',fontsize=12.5,prop=csfont)
plt.xlabel(r'$\epsilon/\Delta$',fontsize=22)
plt.ylabel(r'$n$',fontsize=22)
#plt.xlabel(r'$U/W$',fontsize=18,**csfont)
#plt.ylabel(r'$\alpha$',fontsize=18,**csfont)
plt.tight_layout()
#plt.savefig('plot/exponent_tau_two_insulator_rev.png',format='png',dpi=300)

#plt.title('title',**csfont)
plt.show()


#%%

fig,ax=plt.subplots()
plt.xticks(fontsize=15.5)
plt.yticks(fontsize=15.5)

my_x_ticks = [-0.8,-0.4,0.0,0.4,0.8]
plt.xticks(my_x_ticks)

my_y_ticks = [0.0,0.25,0.5,0.75,1.0]
plt.yticks(my_y_ticks)


plt.plot(e_list[1:-1:2],n_array1[1:-1:2],'D' ,color='tab:red',markersize='9',label=r"$U/\Gamma=10$",zorder=-4)#
plt.plot(e_list[1:-1:2],n_array2[1:-1:2],'o' ,color='tab:blue',markersize='8',label=r"$U/\Gamma=50$",zorder=-4)#
plt.plot(e_list[1:-1:2],n_array3[1:-1:2],'^' ,color='tab:cyan',markersize='6',label=r"$U/\Gamma=100$",zorder=-4)#

plt.plot(e_list[1:-1:2],n_list3[1:-1:2],'--' ,color='k',label=r"eff. two states",zorder=-4)#


plt.legend(loc='best',fontsize=13.5)
plt.xlabel(r'$\epsilon/\Delta$',fontsize=20)
plt.ylabel(r'$n$',fontsize=20)


ax2 = fig.add_axes([0.3, 0.27, 0.25, 0.3])

plt.ylim([-0.5,0.5])
my_y_ticks = [-0.5,0.0,0.5]
plt.yticks(my_y_ticks)


plt.xticks(fontsize=13)
plt.yticks(fontsize=13)

plt.text(-0.9, 0.6, '$10^{-3}$',fontsize=11.5)


plt.plot(e_list[1:-1:2],(n_array1[1:-1:2]-n_list1[1:-1:2])*1000.0,'D' ,color='tab:red',markersize='9',label=r"$U/\Gamma=10$",zorder=-4)#
plt.plot(e_list[2:-1:2],(n_array2[2:-1:2]-n_list2[2:-1:2])*1000.0,'o' ,color='tab:blue',markersize='8',label=r"$U/\Gamma=50$",zorder=-4)#
plt.plot(e_list[1:-1:2],(n_array3[1:-1:2]-n_list3[1:-1:2])*1000.0,'^' ,color='tab:cyan',markersize='6',label=r"$U/\Gamma=100$",zorder=-4)#

plt.ylabel(r'$\Delta n$',fontsize=14,labelpad=-5)


plt.savefig('two_level_fRG_scalingU_v1.png',format='png',dpi=300)



#plt.title(r"$U$=%g,t=%g,$d$=%g,$W$=%g,$\Gamma=%g$"%(U,T,d,W,G),fontsize=14)
plt.tight_layout()
#plt.savefig('two_level_fRG_scalingU.png',format='png',dpi=300)

plt.show()  

#%%

fig,ax=plt.subplots()
plt.xticks(fontsize=15.5)
plt.yticks(fontsize=15.5)

my_x_ticks = [-0.8,-0.4,0.0,0.4,0.8]
plt.xticks(my_x_ticks)

my_y_ticks = [0.0,0.25,0.5,0.75,1.0]
plt.yticks(my_y_ticks)


plt.plot(e_list[1:-1:2],n_array1[1:-1:2],'D' ,color='tab:red',markersize='9',label=r"$U/\Gamma=10$",zorder=-4)#
plt.plot(e_list[1:-1:2],n_array2[1:-1:2],'o' ,color='tab:blue',markersize='8',label=r"$U/\Gamma=50$",zorder=-4)#
plt.plot(e_list[1:-1:2],n_array3[1:-1:2],'^' ,color='tab:cyan',markersize='6',label=r"$U/\Gamma=100$",zorder=-4)#

plt.plot(e_list[1:-1:2],n_list3[1:-1:2],'--' ,color='k',label=r"eff. two states",zorder=-4)#


plt.legend(loc='best',fontsize=13.5)
plt.xlabel(r'$\epsilon/\Delta$',fontsize=20)
plt.ylabel(r'$n$',fontsize=20)





#plt.title(r"$U$=%g,t=%g,$d$=%g,$W$=%g,$\Gamma=%g$"%(U,T,d,W,G),fontsize=14)
plt.tight_layout()
plt.savefig('two_level_fRG_scalingU_v2.png',format='png',dpi=300)

plt.show()  




